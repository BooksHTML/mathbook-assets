// Font Families
$typography-font-family-sans-serif: "Open Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif !default;
$typography-font-family-serif: "PT Serif", "Times New Roman", "Times", serif !default;
$typography-font-family-monospace: "Inconsolata", "Source Code Pro", "Consolas", "Menlo", "Monaco", "Lucida Console", "Liberation Mono", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Courier New", monospace !default;
$typography-font-family-base: $typography-font-family-sans-serif !default;

// Font Sizes
$typography-font-size-base: 16px !default;
$typography-font-size-large: ceil($typography-font-size-base * 1.25) !default;
$typography-font-size-small: ceil($typography-font-size-base * 0.85) !default;
$typography-font-size-h1: floor($typography-font-size-base * 2) !default;
$typography-font-size-h2: floor($typography-font-size-base * 1.75) !default;
$typography-font-size-h3: ceil($typography-font-size-base * 1.5) !default;
$typography-font-size-h4: ceil($typography-font-size-base * 1.3) !default;
$typography-font-size-h5: ceil($typography-font-size-base * 1.125) !default;
$typography-font-size-h6: $typography-font-size-base !default;

// Line Height
$typography-line-height-base: 1.3 !default;
$typography-line-height-computed: floor($typography-font-size-base * $typography-line-height-base) !default;
$typography-line-height-em: #{$typography-line-height-base}em !default;

// HEADINGS
$typography-heading-font-family: $typography-font-family-serif !default;
$typography-heading-color: inherit !default;
$typography-heading-font-weight: 700;
$typography-heading-line-height: 1.1 !default;
// The ratio of the bottom margin relative to the total vertical margin height
$typography-heading-margin-bottom-ratio: 1 / 3;

// LINKS
$typography-link-color: lighten($brand-primary, 10%) !default;
$typography-link-color-hover: $brand-primary !default;
$typography-link-color-active: $brand-secondary !default;

// UNDERLINES
$typography-underline-offset-sans-serif: 1.2 !default;
$typography-underline-offset-serif: 1.2 !default;
$typography-underline-size: 0.1 !default;

// CODE
$typography-code-color: inherit !default;
$typography-code-bg-color: #eeeeee !default;
$typography-code-border-color: #dddddd !default;
$typography-code-border-radius: 0.2em !default;
$typography-code-scrollable-max-height: 340px !default;


// Vertical Rhythm & Compass

@import "vertical-rhythm";

@mixin clearfix {
    overflow: hidden;
}

////////////
// Mixins //
////////////

// Styles to apply to the root typography container, generally the body
@mixin typography-base {
    font-family: $typography-font-family-base;
    @include establish-baseline($typography-font-size-base);
}

// A single state of a link
// Useful if you want to tweak one style (often the default style)
@mixin typography-link-state(
    $state: default,
    $color: auto,
    $underlined: auto,
    $font-type: sans-serif,
    $underline-size: $typography-underline-size
) {
    $underline-color: $color;
    $underline-offset: $typography-underline-offset-sans-serif;
    @if($font-type == serif) {
        $underline-offset: $typography-underline-offset-serif;
    }

    @if($state == default or $state == visited) {
        @if($color == auto) {
            $color: $typography-link-color;
        }

        color: $color;
        $underline-color: rgba($color, 0.5);
    }
    @else if($state == hover or $state == focus) {
        @if($color == auto) {
            $color: $typography-link-color-hover;
        }
        $underline-color: $color;
    }
    @else if($state == active) {
        @if($color == auto) {
            $color: $typography-link-color-active;
        }
        $underline-color: $color;
    }

    color: $color;

    // If focus, add focus overrides
    @if($state == focus) {
        // sass-lint:disable no-duplicate-properties
        outline: thin dotted $color-hover; // Default
        outline: 5px auto -webkit-focus-ring-color; // WebKit
        outline-offset: -2px;
    }
}

// Base styles for all headings
@mixin typography-heading-base(
    $color: $typography-heading-color,
    $font-family: $typography-heading-font-family,
    $font-weight: $typography-heading-font-weight
) {
    font-family: $font-family;
    font-weight: $font-weight;
    color: $color;
}

// Use this mixin to adjust heading sizes
// It adjusts the font-size, line-height, and margins all at once
@mixin typography-heading-size($font-size) {
    @if($font-size == h1) {
        $font-size: $typography-font-size-h1;
    }
    @else if($font-size == h2) {
        $font-size: $typography-font-size-h2;
    }
    @else if($font-size == h3) {
        $font-size: $typography-font-size-h3;
    }
    @else if($font-size == h4) {
        $font-size: $typography-font-size-h4;
    }
    @else if($font-size == h5) {
        $font-size: $typography-font-size-h5;
    }
    @else if($font-size == h6) {
        $font-size: $typography-font-size-h6;
    }

    @include adjust-font-size-to($font-size);
    @include margin-leader(1, $font-size);
    @include margin-trailer(0.5, $font-size);
}

// Paragraph styling
@mixin typography-paragraph {
    & {
        // Reset margins
        margin: 0;

        @include adjust-font-size-to($typography-font-size-base);

        // We only want bottom margins on paragraphs
        // NO, we only want top margins on paragraphs
        // @include margin-trailer;
    }
}

// Special styling for a lead-in paragraph
@mixin typography-paragraph-lead {
    & {
        margin: 0;
        @include adjust-font-size-to(floor($typography-font-size-base*1.15));
        @include margin-trailer;
        font-weight: 200;
    }
}

// A modification to the typography-paragraph-lead for mobile device size
// Output this inside of the media-query of your choice
@mixin typography-paragraph-lead-mobile {
    & {
        @include adjust-font-size-to(floor($typography-font-size-base*1.5));
    }
}

// Blockquote
@mixin typography-blockquote {
    & {
        padding-left: 2 * rhythm(1);
        padding-right: rhythm(1) / 2;
    }
}

// Code blocks
@mixin typography-code(
    $font-family: $typography-font-family-monospace,
    $color: $typography-code-color,
    $bg-color: $typography-code-bg-color,
    $border-color: $typography-code-border-color,
    $border-radius: $typography-code-border-radius
) {
    & {
        font-family: $font-family;
        background-color: $bg-color;
        color: $color;
        word-break: break-all;
        word-wrap: break-word;
        @include rhythm-borders(1px, 1, $typography-font-size-base, solid);
        border-color: $border-color;
        border-radius: 0.2em;

        // Account for some code outputs that place code tags in pre tags
        code {
            padding: 0;
            font-size: inherit;
            color: inherit;
            white-space: pre-wrap;
            background: transparent;
            border-radius: 0;
        }
    }
}

// Add scrolling to a code block
// Good for blocks interspersed in text
// TODO add options for vertical vs horizontal vs both?
@mixin typography-code-scrollable(
    $max-height: $typography-code-scrollable-max-height
) {
    & {
        max-height: $max-height;
        overflow: auto;
    }
}

// Inline code
@mixin typography-code-inline(
    $color: $typography-code-color,
    $bg-color: $typography-code-bg-color,
    $border-color: $typography-code-border-color,
    $border-radius: $typography-code-border-radius
) {

    & {
        margin: 0 1px;
        @include adjust-font-size-to(0.9 * $typography-font-size-base);
        white-space: nowrap;
        color: $color;
        background-color: $bg-color;
        border: 1px solid $border-color;
        // This is kind of abusing the vertical rhythm,
        // but we don't want the padding from inline code on two
        // adjacent lines to overlap
        padding: $base-half-leader / 2 $base-leader;
        border-radius: 0.2em;
    }
}

// Address styling, mostly a reset currently
@mixin typography-address {
    & {
        padding: 0;
        margin: 0;
        line-height: inherit;
        font-style: inherit;
    }
}

// Converts px to em in a given font-size context
@function typography-em(
    $target-px,
    $context-px: $typography-font-size-base
) {
    @return ($target-px / $context-px) * 1em;
}
