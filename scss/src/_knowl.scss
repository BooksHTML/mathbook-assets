// Knowl
@import "typography";

$border-color: $knowl-border-color;

@mixin knowl() {
    /* The knowl drawer */
    .knowl-output {
        @include knowl-output();
    }

    /* Links that open knowls */
    *[knowl] {
        @include knowl-link();
    }
}

@mixin knowl-link() {
    &, &:hover, &.active {
        color: $knowl-link-color;
        background: transparent;
        padding:0px 3px;
        margin:0;
        text-decoration:none;

        /* David likes 1px border in default state, but 2px is definitely
         * better in hover state, so we add a bottom margin so the line
         * doesn't jump onHover.
         */
        margin-bottom: 1px;
        border-bottom: 1px dotted $knowl-link-color;
        
        font-weight:500;
        //line-height:1.3;
        white-space: nowrap;
        @include inline-block(baseline);
        @include border-top-left-radius($border-radius-small);
        @include border-top-right-radius($border-radius-small)
    }

    // &.active {
    //     $bg-color: lighten($knowl-border-color, 20%);
    //     color: darken($bg-color, 60%);
    //     background: $bg-color;
    //     border-bottom: 2px solid $knowl-border-color-bold;
    // }


    &:hover, &.active {
        color: darken($knowl-border-color, 65%);
        background: lighten($knowl-border-color, 4%);
        text-decoration:none;

        /* See comment on default style's border/margin */
        margin-bottom:0;
        border-bottom:2px solid darken($knowl-border-color, 15%);
    }

    &.active {
        background: $knowl-border-color;
    }
}

@mixin knowl-output() {
    & {
        border: $knowl-border-width solid $knowl-border-color;
        background: $knowl-bg-color;
        @include border-radius($border-radius-large);
        margin-bottom:$line-height-computed;
    }

    .knowl-footer {
        font-size:x-small;
        color: darken($knowl-border-color, 60%);
        background: $knowl-border-color;
        bottom: -$knowl-border-width;
        padding:1px 0px 1px $knowl-border-width;
    }

    // TODO recursive solution?
    & .knowl-output {
        & {
            border-color: $knowl-border-color-bold;
            background: $knowl-within-knowl-bg-color;
        }

        /* All knowls within knowls should have this  */
        &, & > .knowl-output {
            border-width: $knowl-border-width / 2;
            border-bottom-width: $knowl-border-width;
        }

        .knowl-footer {
            color: darken($knowl-border-color, 60%);
            // color: desaturate(darken($knowl-border-color-bold, 60%), 80%) ;
            background: $knowl-border-color-bold;
        }
    }

    .knowl-content {
        padding: $knowl-padding;

        .exercise {
            margin-left: -$knowl-padding;
            margin-right: -$knowl-padding;
            padding-right: $knowl-padding;
            padding-left: $knowl-padding;
        }

        .exercisegroup {
            margin-left:-$knowl-padding;
            margin-right:-$knowl-padding;
            padding-right: $knowl-padding;
            padding-left: $knowl-padding;
        }
    }

    @include typography-code-inline(white, $knowl-border-color);
    @include typography-code($bg-color: white, 
                             $border-color: $knowl-border-color-bold);
}
