@import "../ui_config";
@import "../mixins/buttons";
@import "../mixins/flex-container";
@import "compass/css3/transition";
@import "compass/css3/box-sizing";
@import "../../shared/_css_message.scss";
@import "compass/utilities/general/clearfix";

////////////////////////////////////////////////////////////////////////////////
// Config
////////////////////////////////////////////////////////////////////////////////
// Note: These variables should only depend on ui module variables

$navbar-color:change-color($ui-color-base, $lightness: 20%) !default;
$navbar-bg-color: change-color($ui-color-base, $lightness: 93%) !default;

$navbar-border-width: 1px !default;
$navbar-border-color: darken($navbar-bg-color, 20%);
$navbar-border:$navbar-border-width solid $navbar-border-color;

$toolbar-border-width: $navbar-border-width;
$toolbar-border-color: $navbar-border-color;
$toolbar-border:$toolbar-border-width solid $toolbar-border-color;

$navbar-shadow-color:rgba(black,.3) !default;
$navbar-shadow-spread: 5px !default;
$navbar-shadow-offset: 2px !default;
$navbar-bottom-shadow-offset: -$navbar-shadow-offset;

$navbar-top-box-shadow:
    $navbar-shadow-color 0px $navbar-shadow-offset $navbar-shadow-spread;
$navbar-bottom-box-shadow:
    $navbar-shadow-color 0px $navbar-bottom-shadow-offset $navbar-shadow-spread;

////////////////////////////////////////////////////////////////////////////////
// Styles
////////////////////////////////////////////////////////////////////////////////

& { 
    background:$navbar-bg-color;
    border-bottom:$navbar-border;
    z-index:200;
    height: $ui-navbar-height;
    font-family: $ui-font-family-serif;

    /* Smoothly transition box-shadow when navbar sticks/unsticks */
    @include single-transition(box-shadow, 400ms);

    @include clearfix();

    /* 
     * Styles applied to make the navbar persistently visible 
     * when it's sticky-wrapper is stuck
     */
    .stuck & {
        position:fixed;
        top:0;
        right:0;
        left:0;
        @include box-shadow( $navbar-top-box-shadow);
    }

    @media screen and (max-width: $ui-screen-sm-min) {
        /* 
         * At small screen sizes, turn the navbar into a full bar along bottom 
         * When stuck and when not stuck. We don't care about stuck at this size
         */
        &, .stuck & {
            position:fixed;
            top: auto;
            bottom:0;
            left:0;
            right:0;
            background:$navbar-bg-color;
            @include box-shadow( $navbar-bottom-box-shadow);
            height:$ui-navbar-height-touch;
        }
    }

}

/*******************************************************************************
 * BUTTONS
 ******************************************************************************/
.button {
    @include button-base();
    @include button-depressable();
    @include transition-property(text-indent,background-color);
    @include transition-duration(200ms);

    float:left;
    text-align:left;
    position:relative;
    display:block;

    /* subtract border and padding from width 
     * so we can set width precisely as percent */
    @include box-sizing(border-box);

    font-size:1em;
    padding:0;
    margin:0;
    line-height:$ui-icon-box-size;

    /* Override link properties */
    &, &:hover, &:focus, &:visited, &:link, &:active {
        text-decoration:none;
    }

    &, &:link, &:visited {
        color: $navbar-color;
        background-color:$navbar-bg-color;
    }
    /* hover state */
    &:hover {
        background-color:lighten($navbar-bg-color, 5%);
    }

    /* active/pressed state */
    &.active, &:active {
        background-color:darken($navbar-bg-color, 5%);
    }

    &.disabled {
        &, &:link, &:visited, &:hover, &:focus, &:active {
            opacity:.4;
            color: $navbar-color;
            background:$navbar-bg-color;
            cursor:default;
            @include box-shadow(none);
        }
    }
    //----------------------------------------------------

    /* Icon only at small screen sizes */
    @media screen and (max-width:$ui-screen-sm-min) {
        /*@include button-hide-text($navbar-icon-box-size);*/
        float:left;
        text-align:center;
        margin:0;
        line-height: $ui-icon-box-size-touch;

        &.active, &:active {
            /* Vertically flip shadow for lower navbar */
            @include box-shadow(rgba(black,.5) 0 -2px 5px inset);
        }
    }
}

/*******************************************************************************
 * SPECIFIC BUTTONS
 ******************************************************************************/

// Some curry for navbar-buttons
@mixin navbar-button($icon, $pseudo: before, $placement: inline) {
    @include button-with-icon(
        $icon, 
        $ui-icon-size, 
        $ui-icon-box-size, 
        $pseudo,
        $placement);

    @media screen and (max-width:$ui-screen-sm-min) {
        @include button-with-icon(
            $icon, 
            $ui-icon-size-touch, 
            $ui-icon-box-size-touch, 
            $pseudo,
            $placement);
        @include button-hide-text($ui-icon-box-size-touch, $pseudo, $placement);
    }
}

.sidebar-left-toggle-button, .sidebar-right-toggle-button {
    position:relative;
}

.sidebar-left-toggle-button {
    /* Do not display if has-sidebar-left is missing */
    display:none;

    .has-sidebar-left & {
        display:block;
        width:$ui-sidebar-left-width;
    }

    /*On big screens, */
    @media screen and (min-width: $ui-screen-sm-min + 1) {
        &.active {
            /* Show text if hidden and match sidebar width */
            text-indent:0;
            width:$ui-sidebar-left-width;
        }
    }

    /* ion-navicon-round */
    @include navbar-button("\f20d");
    padding:0;
}

.sidebar-right-toggle-button {
    /* Do not display if has-sidebar-right is missing */
    display:none;

    .has-sidebar-right & {
        display:block;
        width: $ui-sidebar-right-width;
    }

    /* ion-chatbox */
    @include navbar-button("\f2e1");
    padding:0;

    /*On big screens, */
    @media screen and (min-width: $ui-screen-sm-min + 1) {
        float:right;

        &.active {
            /* Show text if hidden and match sidebar width */
            text-indent:0;
            width:$ui-sidebar-right-width;
        }
    }
}

.up-button {
    /* ion-chevron-up */
    @include navbar-button("\f126");
    text-align:center;
}

.previous-button {
    /* ion-chevron-left */
    @include navbar-button("\f124");
}

.next-button {
    /* ion-chevron-right */
    @include navbar-button("\f125", after);
    text-align:right;
}

.settings-button {
    /* ion-android-settings */
    @include navbar-button("\f2f7");
}

/*******************************************************************************
 * TOOLBAR 
 ******************************************************************************/

/**
 * Toolbar of buttons and miscellany
 */
.toolbar {
    // flex container with support for 1 to 6 children
    // the sizing of the children is determined by .toolbar-divisor-X
    @include flex-container("toolbar", ".toolbar-item", 1, 6);

    .toolbar:first-child .toolbar-item:first-child {
        border-left:none;
    }

    .toolbar:last-child .toolbar-item:last-child {
        border-right:none;
    }

    /**
     * Make this item's bottom edge clear floated toolbar-items 
     * so that our borders display correctly 
     */
    @include clearfix();
}

/** 
 * Establish borders on toolbar-items, 
 * but ensure adjacent borders do not double up 
 * BEWARE: THERE BE DRAGONS HERE. 
 */
// TODO could be refactored into a flex-container mixin?
.toolbar, .toolbar > .toolbar-item, .button {
    border:$toolbar-border;
    border-top:none;
    border-bottom:none;
    border-right:none;

    /* subtract border and padding from width 
     * so we can set width precisely as percent */
    @include box-sizing(border-box);

    /* First child defers to left border of parent 
     * If toolbar itself is a first-child, we assume it is adjacent with
     * the screen or the edge of a parent toolbar
     */
    &:first-child {
        border-left:none;
    }

    /* Last child defers to right border of parent 
     * If toolbar itself is a last-child, we assume it is adjacent with
     * the screen or the edge of a parent toolbar
     */
    &:last-child {
        border-right:none;
    }
}

/*
 * Order is reversed when we float right
 * So we need to swap first and last on toolbar-item-children 
 * BEWARE: THERE BE DRAGONS HERE. 
 */
// TODO could be refactored into a flex-container mixin?
.toolbar.toolbar-align-right {
    & > .toolbar-item:first-child {
        border-right:none;
        border-left:$toolbar-border;
    }

    & > .toolbar-item:last-child {
        border-left:none;
    }
}

/*******************************************************************************
 * TOP VS BOTTOM 
 ******************************************************************************/

.navbar-bottom-buttons {
    display:none;

    @media screen and (max-width:$ui-screen-sm-min) {
        display:block;
    }
}

.navbar-top-buttons {
    display:block;

    .toolbar {
        .has-sidebar-left & {
            margin-left:240px;
            border-right:$toolbar-border;

            .sidebar-left-toggle-button {
                width: $ui-sidebar-left-width;
            }
        }

        .has-sidebar-right & {
            margin-right:240px;
            border-right:none;

            .sidebar-right-toggle-button {
                width: $ui-sidebar-right-width;
            }
        }
    }

    @media screen and (max-width:$ui-screen-sm-min) {
        display:none;
    }
}

