@import "../ui_config";
@import "../../shared/typography";
@import "../mixins/sliding-sidebars";
@import "compass/css3/transition";
// This provides an overview of the layout and how the root level
// elements of the page fit together.

/*
html, body {
    margin:0;
    padding:0;
}

body {
    background: $ui-color-bg;
    @include typography-base();

    &.centered-container {
        border:1px solid darken($ui-color-bg, 10%);
        border-top:none;
        border-bottom:none;
    }
}
*/

/**
 * Containers restrict the max-width of content within elements
 * whose backgrounds must stretch to the width of the viewport.
 */
.container {
    $content-outer-width:$ui-content-max-width + 2*$ui-content-margin;

    margin:0;

    @include transition-property(width);
    @include transition-duration($sliding-sidebars-transition-duration);

    &, &.layout-left, .layout-left & {
        max-width: $content-outer-width;
    }

    &.has-sidebar-left, .has-sidebar-left & {
        max-width: $content-outer-width + $ui-sidebar-left-width;
    }

/*
    &.has-sidebar-right, .has-sidebar-right & {
        max-width:none;
    }
*/

/*
    &.layout-centered,
    .layout-centered &,
    .has-sidebar-left.has-sidebar-right & {
        max-width: none;
    }
*/
}

/**
 * The master header of the page.
 * Contains the book title and navigation.
 */
#masthead {
    @import "./masthead";
}

/**
 * Primary Navbar
 * Contains primary actions for navigation or layout control
 */
#primary-navbar, #primary-navbar-sticky-wrapper {
    @import "./primary-navbar";

    // TODO move into partial
    /**
     * Wrapper added by jquery.sticky.js
     */
    &#primary-navbar-sticky-wrapper {
        /**
         * At small screens, the navbar is fixed to bottom,
         * so the sticky wrapper should collapse.
         */
        @media screen and (max-width: $screen-md-max) {
            height:0;
        }
    }
}

/**
 * Secondary Navbar
 * Contains secondary actions for navigation or layout control
 */
#secondary-navbar {
    @import "../../shared/_css_message.scss";
    @include css-error("Markup Error: #secondary-navbar is deprecated.");
}

/**
 * Houses the page (everything that is not header or footer)
 */
.page {
    position:relative;

    @media screen and (max-width: $screen-sm-max) {
        /* Clip hidden sidebars */
        overflow:hidden;
    }
}

/* The table-of-contents itself */
#toc {
    @import "../partials/toc";
}

/**
 * These styles apply to the sidebar-left root,
 * whether it be the wrapper or the sidebar-left itself.
 * Note: The #sidebar-left-sticky-wrapper is added by javascript on page load
 */
.page > #sidebar-left, #sidebar-left-sticky-wrapper {

    & {
        /* Hide sidebar by default */
        display:none;
    }

    /* Display it only if it is enabled */
    .has-sidebar-left & {
        display:block;
    }

    @include sliding-sidebars-sidebar(
        $side:left,
        $default-open-min: $screen-md-min,
        $sidebar-width: $ui-sidebar-left-width
    );
}

#sidebar-left {
    // This is for performance.
    // It has a significant impact on iPads.
    // Do not apply it to the sticky wrapper, though!
    // It creates a seperate block formatting context,
    // which screws up fixed positioned children.
    @include sliding-sidebars-compositing-layer();
}

#sidebar-right {

    & {
        /* Hide sidebar by default */
        display:none;

        @include sliding-sidebars-sidebar(
            $side: right,
            $default-open-min: $screen-lg-min,
            $sidebar-width: $ui-sidebar-right-width
        );

        // This is for performance
        @include sliding-sidebars-compositing-layer();

        top:0;
        /* The right sidebar is not sticky, so we can use right:0;*/
        right:0;
    }

    /* Display it only if it is enabled */
    .has-sidebar-right & {
        display:block;
    }

}

.sidebar-content {
    /* Extra links -- could go in either sidebar */
    .extras {
        @import "sidebar-extras";
    }
}

/**
 * Container for the main focus/purpose of the page.
 */
.main {

    // Main styling should go here.
    @import "./main";

    // Styles required to make sliding sidebars work.
    & {
        @include sliding-sidebars-main();
        @include sliding-sidebars-main-side(
            $side: left,
            $slide-min: $screen-sm-min,
            $default-open-min: $screen-md-min,
            $sidebar-width: $ui-sidebar-left-width
        );

        @include sliding-sidebars-main-side(
            $side: right,
            $slide-min: $screen-sm-min,
            $default-open-min: $screen-lg-min,
            $sidebar-width: $ui-sidebar-right-width
        );

        // Force GPU acceleration when animating this element on webkit
        @include sliding-sidebars-compositing-layer();
    }
}

/**
 * Container for main content.
 * This is bound to a comfortable max-width for reading.
 */
#content {
    max-width: $ui-content-max-width;

    &, /* default left */
    .layout-left & {
        margin: $ui-content-margin;
    }

/*
    .layout-centered & {
        margin: $ui-content-margin auto;
    }
*/

    &, .layout-left & { /*, .layout-centered & { */

        /**
         * When the content is cramped,
         * either by opened sidebars,
         * or by a small viewport width,
         * we want small fixed margins
         */
        @include sliding-sidebars-media-cramped-content(
            $sidebar-left-width: $ui-sidebar-left-width,
            $sidebar-right-width: $ui-sidebar-right-width,
            $content-max-width: $ui-content-max-width,
            $content-margin: $ui-content-margin
        ) {
            /* Decrease the margins */
            margin:$ui-content-margin-sm $ui-content-margin-sm;
        }

        /**
         * But sidebars are closed by default in small layouts,
         * so we want auto horizontal margins to center content,
         * regardless of the sidebar state.
         */
        @media screen and (max-width: $screen-sm-max) {
            &,
            .sidebar-left-open &,
            .sidebar-right-open &,
            .sidebar-left-open.sidebar-right-open & {
                /* Decrease the margins */
                margin:$ui-content-margin auto;
            }
        }

        /**
         * And when the viewport gets really small,
         * reclaim a little bit of horizontal space
         */
        @media screen and (max-width: $screen-xxs-max) {
            &,
            .sidebar-left-open &,
            .sidebar-right-open &,
            .sidebar-left-open.sidebar-right-open & {
                /* Decrease the horizontal margins */
                margin:$ui-content-margin-sm $ui-content-margin-xs;
            }
        }
    }
}

