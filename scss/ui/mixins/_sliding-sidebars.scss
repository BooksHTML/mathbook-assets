@import "compass/css3/transform";
// Mixins for the sliding sidebar functionality

// Defaults

@mixin sliding-sidebars-sidebar(
    $side, // left|right
    $default-open-min,
    $sidebar-width
) {
    .has-sidebar-#{$side} & {
        position:absolute;
        /* Default styles on load, before javascript loads */
        margin-#{$side}:0;
        @media screen and (max-width: $default-open-min) {
            /* Small */
            margin-#{$side}:-$sidebar-width;
        }
    }

    .has-sidebar-#{$side}.mathbook-loading &,
    .has-sidebar-#{$side}.mathbook-loaded & {
        margin-#{$side}:0;

        /**
         * Trick webkit browers into generating a compositing layer for this
         * element so that we benefit from GPU acceleration.
         *
         * We config backface-visibility and perspective to improve performance
         * See: http://stackoverflow.com/a/10133679/1599617
         *
         * IMPORTANT: this will reset the coordinate context for child elements
         *            with fixed positioning.
         */
        @include translateZ(0);
        @include backface-visibility(hidden);
        @include perspective(1000);

        &.stuck {
            /*
             * Stick containers can't have these properties when stuck
             * because it will break fixed positioning of their child.
             * Since removing the properties will slow down animations,
             * we remove them only when stuck as a compromise.
             */
            @include transform(none);
            @include backface-visibility(visible);
            @include perspective(none);
        }
    }

    .has-sidebar-#{$side}.mathbook-loading &.closed,
    .has-sidebar-#{$side}.mathbook-loaded &.closed {
        margin-#{$side}: -$sidebar-width;
    }

    .sidebar-content {
        width: $sidebar-width;
    }
}

@mixin sliding-sidebars-main() {
    /* Must be relative to support sidebar offsets */
    position: relative;
    width: auto;
    /*z-index:10;*/
}

// Main left styles
// @param $side - left|right
// @param $slide-min - the min width at which sidebars slide instead of push
// @param $default-open-min - min width at which this is open by default
// @param $sidebar-width - the width of the sidebar
@mixin sliding-sidebars-main-side(
    $side,
    $slide-min,
    $default-open-min,
    $sidebar-width
) {

    /* Main with sidebar left without javascript*/
    .has-sidebar-#{$side} & {
        @include sliding-sidebars-main-side-state($side, open-slide, $sidebar-width);
        @media screen and (max-width: $default-open-min) {
            @include sliding-sidebars-main-side-state($side, closed, $sidebar-width);
        }
    }

    /* Main with sidebar left open */
    .has-sidebar-#{$side}.mathbook-loading &, 
    .has-sidebar-#{$side}.mathbook-loaded & {
        @include sliding-sidebars-main-side-state($side, open-slide, $sidebar-width);
        @media screen and (max-width: $slide-min) {
            @include sliding-sidebars-main-side-state($side, open-push, $sidebar-width);
        }

        /**
         * Trick webkit browers into generating a compositing layer for this
         * element so that we benefit from GPU acceleration.
         *
         * We config backface-visibility and perspective to improve performance
         * See: http://stackoverflow.com/a/10133679/1599617
         *
         * IMPORTANT: this will reset the coordinate context for child elements
         *            with fixed positioning.
         */
        @include translateZ(0);
        @include backface-visibility(hidden);
        @include perspective(1000);
    }

    /* Main with sidebar left closed */
    .has-sidebar-#{$side}.mathbook-loading &.sidebar-#{$side}-closed,
    .has-sidebar-#{$side}.mathbook-loaded &.sidebar-#{$side}-closed {
        @include sliding-sidebars-main-side-state($side, closed, $sidebar-width);
    }
}

// Set main-left state
// @param $side - left|right
// @param $state
//     * open-slide subtracts sidebar width from main width
//     * open-push pushes main to the side, only supports one sidebar open
//     * closed covers/hides the sidebar
// @param $sidebar-width - the width of the sidebar
@mixin sliding-sidebars-main-side-state($side, $state, $sidebar-width) {
    @if($state == open-slide) {
        margin-#{$side}:$sidebar-width;
        #{$side}:auto;
    } @else if($state == open-push){
        #{$side}: $sidebar-width;
        margin-#{$side}:0;
    } @else if($state == closed) {
        margin-#{$side}:0;
        #{$side}:auto;
    }
}

@mixin sliding-sidebars-media-cramped-content(
    $sidebar-left-width,
    $sidebar-right-width,
    $content-max-width,
    $content-margin
) {
    
    $breakpoint: $content-max-width + 2*$content-margin;
    @media screen and (max-width: $breakpoint ) {
    }


    .sidebar-left-open & {
        $breakpoint: $content-max-width 
                     + $sidebar-left-width
                     + 2*$content-margin;
        @media screen and (max-width: $breakpoint) {
            @content;
        }
    }

    .sidebar-right-open & {
        $breakpoint: $content-max-width 
                     + $sidebar-right-width
                     + 2*$content-margin;
        @media screen and (max-width:$breakpoint) {
            @content;
        }
    }

    .sidebar-right-open.sidebar-left-open & {
        $breakpoint: $content-max-width 
                     + $sidebar-left-width 
                     + $sidebar-right-width
                     + 2*$content-margin;
        @media screen and (max-width: $breakpoint ) {
            @content;
        }
    }
}
